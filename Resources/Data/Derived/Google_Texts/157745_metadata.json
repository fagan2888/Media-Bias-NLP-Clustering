{"article_title": "HealthCare.gov costs show that feds have literally no idea how to build a big web site", "article_keywords": ["cgi", "web", "raised", "testing", "healthcaregov", "track", "literally", "million", "site", "idea", "costs", "feds", "build", "big", "health", "stay"], "article_url": "http://venturebeat.com/2013/11/01/healthcare-gov-clueless/", "article_text": "Could you build a working website for $300 million?\n\nApparently, the U.S. government is having difficulty doing that. HealthCare.gov, the website meant to help people find insurance under the Affordable Care Act, has cost hundreds of millions of dollars to build, and it still doesn\u2019t work right.\n\nCost estimates vary, but the Washington Post figures that the government has spent at least $170 million, and possibly as much as $292 million \u2014 so far.\n\nThe Sunlight Foundation examined payments made to the site\u2019s chief contractor, Virginia-based CGI Federal (a subsidiary of a Canadian company, CGI Global), and estimated that CGI alone received $70 million in payments so far.\n\nImage Credit: Screenshot\n\nAnd yet the site has performed so badly since its launch a month ago that people can\u2019t even create accounts. It\u2019s frequently offline, and even when you can log on, it\u2019s often so slow as to be unusable, according to reports. The most updates from the site\u2019s official Twitter account illustrate the problem perfectly: Of the most recent five, four were about site outages, and one encouraged people to apply for insurance using paper forms. Paper!\n\nThat it got me to thinking: Just how much money does it take to build a website like this? In all the years that I\u2019ve covered Internet technology, I\u2019ve rarely run into a website \u2014 no matter how complex \u2014 that cost anywhere near that amount. Even if you add in costs for complex back-end systems integration, training, and marketing, $170 million to almost $300 million is way more than you could possibly need. I can\u2019t even figure out where that much money would go.\n\nNow, it\u2019s not really fair to call this a web \u201csite\u201d \u2014 it\u2019s more of a web application, as longtime Java guy Miko Matsumura, now a VP of developer relations at HazelCast, told me.\n\n\u201cA web application of this size is very problematic, especially when you have distributed accountability and you have a poor integration and testing paradigm in place,\u201d Matsumura said.\n\nIn other words: There\u2019s a lot of stuff going on in the background that needs to be tied together, and whenever you build a complex system made of many different, interconnected parts, it\u2019s going to be expensive \u2014 and will require a lot of time to test (which the makers of HealthCare.gov didn\u2019t have \u2014 the compressed launch timeline gave them just a week for testing, a ridiculously short period.) Fair enough.\n\nEditor\u2019s note: Developers! Think you\u2019re good enough to fix HealthCare.gov? Check out our upcoming DevBeat conference, Nov. 12-13 in San Francisco, is a hands-on event for excellent developers, all aimed at boosting your code skills, security knowledge, hardware hacking, and career development. Register now.\n\nBut let\u2019s take a look at what else you could build for almost $300 million \u2014 like Facebook, for instance.\n\nBy the time Facebook had raised $280 million, in October 2007, it had about 50 million users, had recruited 100,000 businesses to create Facebook pages, and was just launching its developer platform. It was already looking like the dominant social network. And it was dead easy to create a new account.\n\nNote that Facebook had raised almost $300 million by late 2007 \u2014 it hadn\u2019t spent nearly that much. And yet it accomplished so much more than HealthCare.gov did with the same budget.\n\nImage Credit: VentureBeat\n\nOther private companies have done as much by spending even less. Instagram\u2019s founders turned $57.5 million of capital into a company worth over a billion dollars. Workday raised just $175 million, and LinkedIn $200 million, before their successful IPOs.\n\nBut those aren\u2019t health care-related companies. The data and regulatory complexity of health care makes it a lot harder to build a working web site, right?\n\nMaybe not. Castlight Health, a company that collects data on health care providers to help consumers make informed choices, has raised just $160 million so far. Its web-based service seems to be working just fine. Oscar, a private health insurance exchange (limited to New York residents for now) has raised $40 million. eHealth and GetInsured have been offering health insurance comparison-shopping for years, and while I couldn\u2019t find how much money those two companies have raised, it\u2019s worth noting that they exist, and they work \u2014 so it\u2019s not like the makers of HealthCare.gov were tackling an insoluble problem.\n\nOther smart people are drawing the same conclusion as Matsumura: This was a complicated project, yes, but it was crippled by bad management.\n\n\u201cThe real problems are with the back end of the software,\u201d Dan Hanson wrote on Marginal Revolution, a blog run by economist Tyler Cowen. \u201cWhen you try to get a quote for health insurance, the system has to connect to computers at the IRS, the VA, Medicaid/CHIP, various state agencies, Treasury, and HHS. They also have to connect to all the health plan carriers to get pre-subsidy pricing. All of these queries receive data that is then fed into the online calculator to give you a price. If any of these queries fails, the whole transaction fails.\u201d\n\nThat gives you a peek at what is so complicated about the site, but it\u2019s not an unheard-of level of complexity. The real problem seems to be that the project was run without effective oversight.\n\n\u201cThe best way to do a project of this size is to iterate around a core of 4-5 extremely elite engineers who are building a platform based around something extremely scalable,\u201d Matsumura said. \u201cOnce you have that nucleus in place, you can begin to integrate applications. Even with such a paradigm, you have issues about distributed application clustering and scalability.\n\n\u201cSadly, there are web applications for less important things that have handled way more traffic.\u201d\n\nLet\u2019s not even get into how many lines of code it took to build HealthCare.gov. One of the estimates being bandied about is that it contains 500 million lines of code \u2014 an absurd figure, as it translates to 10 times the amount of code in Windows Vista, or, if you figure 500 developers were banging away at their keyboards for a whole year, about 83,000 lines of code for every man-month. (The man-month is a mythical concept used by old-school tech developers and, perhaps, government contractors.)\n\nLet\u2019s just say that HealthCare.gov is fantastically complex and lacked the competent oversight that such a complicated tech project demands.\n\nIt\u2019s telling that CGI was saying that testing the service was the government\u2019s responsibility and wasn\u2019t part of its contract. If so, then shame on the feds for offering CGI a contract without testing built in. You just can\u2019t build and deploy a site like this without extensive testing, and that testing needs to be tightly integrated with the development of the site.\n\n\u201cNone of these missteps would have occurred if the contractors had taken a gradual, agile approach,\u201d Practice Fusion cofounder Matthew Douglass wrote this week on VentureBeat. Practice Fusion, by the way, has built a successful, nationwide platform for electronic health records now used by over 100,000 medical professionals. Its total fundraising to date? Just $140 million.\n\nPresident Barack Obama took to the Rose Garden a week ago to talk about how disappointed he was in the site and to promise a \u201ctech surge\u201d aimed at fixing it. (As if that will work.) Secretary of Health and Human Services Kathleen Sebelius spent hours on Capitol Hill this week, offering her apologies and getting grilled by Congressmen about the site\u2019s failure.\n\nBut any number of apologies won\u2019t fix this basic fact: As with so many other government projects, we\u2019ve thrown hundreds of millions of dollars at a problem that could have been solved with a fraction of the expenditure \u2014 if someone in charge actually knew what they were doing.\n\nMore information:\n\nCGI\n\nPractice Fusion\n\nHazelcast CGI is a leading IT and business process services provider focused on being a partner, employer and investment of choice. Regroupant environ 69 000 professionnels dans plus de 40 pays, CGI s... All CGI news \u00bb CGI's Landscape to stay on top of the industry. Access the entire ecosystem, track innovation & deals. Trackto stay on top of the industry. Access the entire ecosystem, track innovation & deals. Learn more Practice Fusion is the country\u2019s largest physician-patient community, with a mission of connecting doctors, patients and data to drive better health and save lives. A driving force in mode... All Practice Fusion news \u00bb Practice Fusion's Landscape to stay on top of the industry. Access the entire ecosystem, track innovation & deals. Trackto stay on top of the industry. Access the entire ecosystem, track innovation & deals. Learn more Hazelcast (www.hazelcast.com) is the leading open source in-memory data grid. Hazelcast is a free open source download under the Apache license that any developer can include in minutes to e... All Hazelcast news \u00bb Hazelcast's Landscape to stay on top of the industry. Access the entire ecosystem, track innovation & deals. Trackto stay on top of the industry. Access the entire ecosystem, track innovation & deals. Learn more", "article_metadata": {"bt": {"pubDate": "2013-11-01T16:01:22+00:00", "author": "dylan-tweney", "modDate": "2013-11-01T16:01:22+00:00", "keywords": "cgi,dylans-desk,editors-pick,hazelcast,healthcare-gov,practice-fusion,tech-surge", "type": "news", "id": 851507}, "og": {"site_name": "VentureBeat", "description": "Could you build a working website for $300 million?", "title": "HealthCare.gov costs show that feds have literally no idea how to build a big web\u00a0site", "url": "http://venturebeat.com/2013/11/01/healthcare-gov-clueless/", "image": "http://1u88jj3r4db2x4txp44yqfj1.wpengine.netdna-cdn.com/wp-content/uploads/2013/10/523412897_17465571_wide-d0d701acbd6ccc9079351466478ea18b36760aa5.jpg", "type": "article"}, "description": "Could you build a working website for $300 million?", "viewport": "width=device-width, initial-scale=1.0"}, "_id": "\"57477af46914bd0286fdd6f2\"", "article_summary": "\u201cSadly, there are web applications for less important things that have handled way more traffic.\u201dLet\u2019s not even get into how many lines of code it took to build HealthCare.gov.\nThe data and regulatory complexity of health care makes it a lot harder to build a working web site, right?\nYou just can\u2019t build and deploy a site like this without extensive testing, and that testing needs to be tightly integrated with the development of the site.\nBut let\u2019s take a look at what else you could build for almost $300 million \u2014 like Facebook, for instance.\nThat it got me to thinking: Just how much money does it take to build a website like this?"}