“Many eyes, shallow bugs.” Perhaps the HealthCare.gov gang that couldn’t code straight had never heard this software mantra. One can’t be sure. The Centers for Medicare and Medicaid Services, the agency overseeing the technically troubled Affordable Care Act exchanges, has done a far better job concealing the details of its systems design, development, and deployment practices than producing working websites. IT experts uncharitably observe that what the President describes as “glitches” are symptomatic of deeper digital dysfunctions. Are they right?

Unfortunately, that’s the wrong question. The better question and concern is, where was the leadership and oversight helping to assure Obamacare’s implementation success?

Blaming programmers, coders, and project managers for disgraceful design flaws and technical turmoil is too easy and obvious. Crap rolls downhill. Look deeper. The underlying truth for virtually every large system’s implementation initiative is that success demands leadership and oversight that holds itself accountable for assuring best practice. Good governance, not superior technical chops or ready access to alpha geeks, is how you build complex systems that deliver reliable and resilient value for money. Good governance provides oversight, insight, and foresight. Emerging problems are flagged sooner; project leaders present their testing protocols and outcomes; and updated expectations are clearly communicated throughout the enterprise. Contingencies are constantly reviewed and appropriately revised. That’s what serious systems developers do.

Whether organizations implement a standard Enterprise Resource Planning (ERP) system or create something new, the literature of case history and empirical evidence make abundantly clear what works and what doesn’t. Known “worst practices” include “create the project plan by working backwards from a drop-dead system completion date” and “skip the testing phase because the project is way behind schedule.” Does any of this sound familiar? Obamacare’s leadership and governance simply wasn’t serious.

In my work on complex systems procurement (PDF) and participation in project and program reviews, the only variable more important than the quality of the people doing the work was the integrity of the individuals responsible for governance. They understood how to be supportive while holding management accountable. They demanded — and got — visibility, transparency, and insight into how management defined and adhered to best practice. They wanted discussion and debate around technical trade-offs. Most of all, they wanted to better manage risk by rigorously reviewing and learning from test outcomes. Actions speak louder than words. Successful IT systems demand serious IT governance. Where was it?

Based solely on Government Accounting Office reports and media coverage, it’s unclear which — if any — best practices in systems and software development were being followed. Even worse, there’s virtually no discussion of how project milestones were measured, assessed, and reviewed. The few serious tests conducted suggest that that iterative learning from smaller scale design and deployment was less a goal than an afterthought.

In other words, the role of leadership and governance was conspicuous by its absence. Indeed, the GAO observed that when given the chance to comment on its June 19 report, “the Department of Health and Human Services (HHS) emphasized the progress it has made in establishing exchanges, and expressed its confidence that exchanges will be open and functioning in every state by October 1, 2013.”

How could HHS not have known? Please. That’s neither technical failure nor software glitch; that’s a failure of leadership and oversight. These are issues of character and culture, not technology and money.

Over a year ago, this blog asserted that the key to any successful innovation rollout is a commitment to testing:

Testing for validation is all about leaders looking for compliance and adherence to plans; testing for learning is about leadership that expects people to be attentive, agile and adaptive. What kind of leadership do you think leads to a sustainable innovation culture? Yes, look at innovators, their schedules and their budgets. But if you want to understand how smart and serious they are, look at the testing regimes they submit their innovations to. Are you impressed? Or do they flunk?

That’s why listening to the way the President and HHS Secretary Kathleen Sebelius talk about Obamacare’s rollout failures is so disheartening and disappointing. “…Nobody’s madder than me,” said the President, who earlier observed that no one called for Apple to shut down or discontinue its iPhones after glitches had been discovered.

But, of course, Apple demonstrably knows what it is doing. Moreover, when Apple had problems, its CEO Tim Cook publicly apologized. The President and Secretary Sebelius did not. Tim Cook understands that Apple has customers who have choices and who deserve real value for money. It’s not clear what the President, Secretary Sebelius, and the ostensible overseers of Obamacare’s technologies understand.

The simple and inarguable truth is that the technical teams struggling to build Obamacare’s exchanges on a demanding deadline aren’t as technically talented or capable as Apple’s technologists. Precisely because these developers and managers were more “typical” and “average” than world-class, they needed an oversight and accountability leadership that would step up to the challenge. They didn’t get it.

Many eyes, shallow bugs. The next iteration of network development needs to be more open, more transparent, and more accountable. Or it will fail. Again.