{"article_title": "Obamacare web fiasco won't be the last big IT fail", "article_keywords": ["wont", "web", "users", "big", "obamacare", "system", "website", "large", "complex", "systems", "fiasco", "fail", "problems", "insurance", "projects", "plans"], "article_url": "http://theconversation.com/obamacare-web-fiasco-wont-be-the-last-big-it-fail-20049", "article_text": "Healthcare.gov \u2013 the web-based manifestation of Obamacare \u2013 launched last month to numerous and widely-publicised problems including long wait times, corrupted data and nonfunctional buttons.\n\nAlthough it was widely portrayed as an unprecedented fiasco, significant problems, and even catastrophic failures, are actually very common in large and complex IT projects.\n\nJust last year, the US Air Force abandoned one system after already spending $1 billion. In Australia, a defective data exchange in the court information system led to 22 false arrests. In 2010, a data entry bug led 25 organ donors losing the wrong organs.\n\nWe\u2019ve seen Google classifying all websites as malicious and even a computer virus suspected in the deaths of 154 Spanair passengers.\n\nWhile Healthcare.gov\u2019s specific faults do differ from the previous examples, the underlying problem is the same: the combination of size and complexity.\n\nKeith Allison\n\nOne website, 36 states\n\nThe Patient Protection and Affordable Care Act, aka Obamacare, establishes public \u201cexchanges\u201d or marketplaces, where individuals can compare and select private health insurance plans. While 14 states built their own exchanges, the federal government built healthcare.gov, a single exchange for the remaining 36 states.\n\nIn principle, companies list insurance plans, which individuals compare and choose from. The website then transmits the orders to the insurance companies. This sounds simple, but the details are extraordinarily complicated.\n\nHealthcare.gov has to interact with the independent systems of multiple government agencies and insurance companies. This creates incompatibility problems like those between Windows, OS X and Linux, except instead of three disparate systems there are dozens.\n\nExacerbating the situation, insurance plans and subsidies are also complicated and obfuscatory. Furthermore, the website is used by regular folk (not insurance experts), many of whom may know little about insurance.\n\nComplexity breaks everything\n\nMeanwhile, the software engineering community manifests two broad schools of thought. In the Agile school, self-organising developers focus on coding and testing, minimise formal processes and documentation and deploy in small increments. In the Planning school, managers control development using budgets, schedules and formal processes while developers focus on the software\u2019s high-level design (architecture) and deploy in large increments.\n\nThe problem is that neither approach is suited to large, complex projects. Agile\u2019s informal controls and self-organisation break down as teams exceed 20 or so developers. Meanwhile, Planners cannot cope with the ambiguity and unpredictability of complex systems \u2013 as no one has built an interstate healthcare exchange before, no one can reliably predict how long it will take, how much it will cost or how users will react to various design choices.\n\nThe uncomfortable reality is that no one really knows how to design or manage large, complex IT projects.\n\nRadical idea: ditch the website\n\nHowever, the history of IT project problems and failures suggest we need to eliminate unnecessary complexity. The US could simply cover all citizens, like every other western democracy, removing the need for the website. More generally, each feature of a system should be weighed against the complexity (and confusion) it adds.\n\nHealthcare.gov should also have been deployed one state at a time to gauge traffic levels and identify technical problems before most users had access. Any system with many potential users, applications or domains should adopt phased deployment.\n\nFinally, it is critical to stop making important decisions based on fantasies. Approved projects tend to be the ones where \u201cproponents best succeed in designing \u2013 deliberately or not \u2013 a fantasy world of underestimated costs, overestimated revenues, overvalued local development effects, and underestimated environmental impacts.\u201d Forecasted schedules and costs are simply unreliable \u2013 60-80% of IT projects experience effort or schedule overrun \u2013- and the \u201csystem requirements\u201d that drive large projects are often little more than speculation.\n\nHealthcare.gov is undoubtedly a mess, but no more so than usual for a large, complex IT project. To minimise problems in these projects, we have to eliminate unnecessary complexity, deploy incrementally and accept that there are some things that we just don\u2019t know.", "article_metadata": {"description": "Healthcare.gov \u2013 the web-based manifestation of Obamacare \u2013 launched last month to numerous and widely-publicised problems including long wait times, corrupted data and nonfunctional buttons. Although\u2026", "pubdate": 20131113, "author": "Paul Ralph", "csrf-token": "orQ0BKWMSJTKs0FKAeVXCc2myR+Oeke4QVMsUsr4X1M=", "twitter": {"site": "@ConversationUK", "card": "summary_large_image", "creator": "@DrPaulRalph"}, "commissioning-region": "uk", "institution": "Lancaster University", "csrf-param": "authenticity_token", "og": {"site_name": "The Conversation", "description": "Healthcare.gov \u2013 the web-based manifestation of Obamacare \u2013 launched last month to numerous and widely-publicised problems including long wait times, corrupted data and nonfunctional buttons. Although\u2026", "title": "Obamacare web fiasco won't be the last big IT fail", "url": "http://theconversation.com/obamacare-web-fiasco-wont-be-the-last-big-it-fail-20049", "image": "http://cdn.theconversation.com/files/34806/width1356x668/fdvjbtfh-1383931107.jpg", "updated_time": "2016-05-23T03:13:59Z", "type": "article"}, "fb": {"app_id": 127105130696839, "pages": 176084152419221}, "searchtype": "analysis", "article": {"publisher": "https://facebook.com/ConversationUK"}, "original-source": "https://theconversation.com/obamacare-web-fiasco-wont-be-the-last-big-it-fail-20049", "msapplication-navbutton-color": "#d8352a", "theme-color": "#d8352a", "news_keywords": "Computing, Digital economy, IT, Obamacare"}, "_id": "\"57477af46914bd0286fdfd24\"", "article_summary": "Healthcare.gov is undoubtedly a mess, but no more so than usual for a large, complex IT project.\nThe problem is that neither approach is suited to large, complex projects.\nThe uncomfortable reality is that no one really knows how to design or manage large, complex IT projects.\nIn principle, companies list insurance plans, which individuals compare and choose from.\nExacerbating the situation, insurance plans and subsidies are also complicated and obfuscatory."}