{"article_title": "Root Cause Analysis: An Alternative to Blamestorming", "article_keywords": ["demand", "issue", "root", "work", "system", "analysis", "focus", "application", "state", "complex", "blamestorming", "healthcare", "alternative", "cause", "user"], "article_url": "http://www.datacenterknowledge.com/archives/2014/03/24/root-cause-analysis-alternative-blamestorming/", "article_text": "DAVID MAVASHEV\n\nNastel Technologies DAVID MAVASHEVNastel Technologies\n\nDavid Mavashev is CEO of Nastel Technologies, a provider of APM monitoring.\n\n\u201cBlamestorming\u201d \u2013 to my surprise this term is actually in the dictionary or at least dictionary.com. The definition is as follows, \u201can intense discussion or meeting for the purpose of placing blame or assigning responsibility or failure.\u201d How is this relevant to IT Operations or Healthcare IT?\n\nAfter an extraordinarily rocky start, the federal healthcare exchange \u2013 the online marketplace consumers use to purchase health insurance under the Affordable Healthcare Act, a.k.a. \u201cObamacare\u201d \u2013 seems to be working more smoothly. But, now problems are cropping up with the state healthcare exchanges. Media reports highlight state-level exchange system issues seemingly every week. This shouldn\u2019t be a surprise as we are dealing with a highly complex system.\n\nWhen you alleviate a bottleneck in one location of a complex system, the result is often a newly visible series of bottlenecks in other locations. The transactions now flow past the prior bottleneck only to hit another logjam in different area of the system. The rule of thumb in performance analysis is analyze before you fix and focus on the most significant bottleneck, first. The state of affairs will change once that issue is relieved and you then focus on the next significant issue. However, this well-worn IT approach is not always followed.\n\nSome states have singled out vendor software as the culprit. Others blame a lack of comprehensive testing or inter-operability. Still others cite inconsistent project leadership and failures to address known issues in time to achieve a smooth rollout. Some or all of these glitches may sound familiar to CIOs and IT executives who have spearheaded the launch and maintenance of a complex system.\n\nThe Rush to Point Fingers\n\nCIOs may also recognize a familiar tone from people quoted in the news reports \u2013 the rush to affix blame. When a complex system doesn\u2019t work, groups that handle components of the larger system tend to focus on deflecting responsibility from their unit. It\u2019s important to find out what went wrong, but a more fruitful discussion would focus on identifying root causes like scalability and infrastructure monitoring capacity.\n\nThere are a number of possible explanations for a troubled system rollout. Clearly, the system lacks the capacity to handle anticipated demand. Was the anticipate demand known? In this, the answer is decidedly \u201cyes\u201d. Or worse, there were no requirements for testing loads that simulated anticipated demand. Were there a clear set of \u201cuser stories\u201d that illustrate what the system must do to be effective? User stories, as part of an agile development environment often include performance expectations and should also cover the range of users expected to utilize the application\n\nA friend of mine told me about their endless troubles in registering for healthcare. This person is a private instructor with irregular hours who fit the profile of the type of user this program was supposed to address. Previously, she was not able to get affordable healthcare and had hoped that this would address her needs. It might actually do that, if she could get registered. When she tried to register, the website application told her that her income she entered on the website did not match what the state had on file. It turned out the application wanted future income for the current year end. But, since she is not an employee with a regular salary there was no way to do that with certainty. The application made assumptions that didn\u2019t fit the target audience. Apparently, the user stories created were not appropriate or complete. At this point she still has not made it through the application process.\n\nAlternatively, there may have been flaws in the architecture or perhaps, coding bugs could be responsible. Maybe, there\u2019s a database access issue. Any and all of these explanations may play a role, but here\u2019s the fundamental problem: The technology professionals charged with resolving the issue typically work in silos, and the person in charge may feel overwhelmed by the sheer volume of analysis and speculation. This is especially true when past experiences inform them that all this painstaking work produced little to no results.\n\nSee more on the Next Page\n\n\n\nPages: 1 2", "article_metadata": {"generator": "WooCommerce 2.4.7", "og": {"site_name": "Data Center Knowledge", "description": "After an extraordinarily rocky start, the federal healthcare exchange, the online marketplace consumers use to purchase health insurance under the Affordable Healthcare Act, seems to be working more smoothly. But, now problems are cropping up with the state healthcare exchanges, writes David Mavashev of Nastel Technologies. What's the best approach for diagnosing and fixing such IT problems?  Read More", "title": "Root Cause Analysis: An Alternative to Blamestorming | Data Center Knowledge", "locale": "en_US", "image": "http://www.datacenterknowledge.com/wp-content/themes/inet-dck-wp-theme/images/logo.png", "updated_time": "2014-03-21T15:37:44+00:00", "url": "http://www.datacenterknowledge.com/archives/2014/03/24/root-cause-analysis-alternative-blamestorming/", "type": "article"}, "fb": {"admins": 1131721441}, "robots": "noodp,noydir", "MobileOptimized": 320, "article": {"section": "Industry Perspectives", "published_time": "2014-03-24T08:24:54+00:00", "modified_time": "2014-03-21T15:37:44+00:00"}, "HandheldFriendly": "True", "viewport": "width=device-width, initial-scale=1.0"}, "_id": "\"57477af46914bd0286fe2515\"", "article_summary": "This shouldn\u2019t be a surprise as we are dealing with a highly complex system.\nWhen you alleviate a bottleneck in one location of a complex system, the result is often a newly visible series of bottlenecks in other locations.\nBut, now problems are cropping up with the state healthcare exchanges.\nSome or all of these glitches may sound familiar to CIOs and IT executives who have spearheaded the launch and maintenance of a complex system.\nWhen a complex system doesn\u2019t work, groups that handle components of the larger system tend to focus on deflecting responsibility from their unit."}