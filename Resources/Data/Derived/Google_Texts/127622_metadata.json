{"article_title": "What Oracle\u2019s Botched Obamacare Site Says About the Future of the Web", "article_keywords": ["web", "built", "botched", "work", "obamacare", "site", "oracles", "source", "future", "oregon", "way", "contractors", "oracle", "open", "projects", "software"], "article_url": "http://www.wired.com/2014/03/oracle-oregon/", "article_text": "It\u2019s bad enough that the state of Oregon has paid software giant Oracle over $100 million to build a healthcare exchange site that doesn\u2019t work. But it now appears that Oregon is stuck with Oracle, unable to simply hire another firm to finish the job.\n\nIt\u2019s the latest setback for the troubled Obamacare rollout, and it provides a classic example of an old-school IT provider lagging behind the new and more effective way of building massive web operations \u2014 the open source approach behind mega-scale websites like Google and Facebook.\n\nLast September, as it became clear that the site wouldn\u2019t be ready for the October 1 launch date, Oregon stopped paying Oracle. The company kept working until last week, when it pulled 100 contractors from the project, demanding $69.5 million for the work it had completed since September. This week, The Oregonian reports, the state agreed to pay $43.9 million of its outstanding bill to get Oracle back to work to finish the project.\n\nYou might think that Oregon officials would have been happy to see Oracle go, considering their $100 million site is still on the fritz. But making the service work properly will likely depend on knowledge held only by Oracle\u2019s contractors. Oregon needs Oracle, at least for now. And that\u2019s part of the problem: Oregon, like so many other IT customers over the years, is now locked into a contract with a vendor and has few options other than paying the company more or starting the project over from scratch.\n\nDoomed to Failure\n\nThis debacle doesn\u2019t look good for Oracle, but there\u2019s plenty of blame to go around in Oregon. An audit found that state officials did a poor job defining the project\u2019s scope and requirements, according to KATU News. That\u2019s actually one of the main reasons that as many as 68 percent of all IT projects are doomed, according to IT analyst Michael Krigsman, who looks closely at the nature of project failures.\n\nBut this isn\u2019t just a failed IT project. It\u2019s a public policy failure, and an indictment on an entire way of thinking about IT. Contractors generally either sell their own proprietary software or products from their partners, and design decisions are often so complex that only the original contractors can make sense of the software they produce. Replacing the contractors \u2014 or even adding new features to a legacy system \u2014 often means starting over from scratch. This predicament could have been avoided if a fresher approach to software architecture had been taken.\n\nAlthough CGI Federal \u2014 one of the firms hired to build Healthcare.gov \u2014 called the nation-wide project \u201cunprecedented,\u201d there are proven models for approaching similar problems. Companies like Amazon, Google, and Facebook have infrastructure that supports millions of users daily. When these companies faced unprecedented scaling problems, they didn\u2019t turn to the Oracles and CGIs of the world. They turned to the open source community. And when Facebook couldn\u2019t find open source tools to meet its needs, it built its own, and contributed them back to the community.\n\nOf course, these sites didn\u2019t have to flip a switch and start serving millions of users overnight, as the healthcare exchanges did, but the lessons they learned in bringing their services to a massive scale shouldn\u2019t be ignored. The whole point of open sourcing these projects was to save future generations from having to build large scale web services from scratch.\n\nAnd while something like Healthcare.gov likely needs more traditional database systems, rather than the new age data storage systems pioneered by Google and Amazon, there\u2019s plenty government contractors could have learned from web companies. One of the many challenges the health care exchanges face is the need to pass information between many different systems. It just so happens that Facebook built a widely used tool for doing just that for its own internal use.\n\nIn the case of the healthcare exchanges, we often don\u2019t even know what technologies the contractors are using. That\u2019s part of the problem.\n\nBroken Government\n\nIt\u2019s not that government agencies have never used open source. The original Healthcare.gov interface \u2014 i.e., the part that actually worked \u2014 was open source. NASA helped create OpenStack, a system for building Amazon-style clouds in your own data center. The National Security Agency, meanwhile, built the infrastructure that supports its massive surveillance projects using open source software. It even went so far as to create its own open source database system inspired by a Google researcher paper.\n\nBut the NSA\u2019s efforts landed them in hot water with a Senate oversight committee. Not for constitutional surveillance of U.S. citizens, but for building open source software instead of buying from a company like Oracle.\n\nThe way government agencies buy software is badly broken, Clay Johnson, a former White House fellow who also co-founded the company that built President Barack Obama\u2019s campaign website, wrote for the New York Times. The process is convoluted, and favors entrenched players who know how to navigate the rules over newer companies that are better versed in modern development tools and practices.\n\nBut the problems go beyond procurement: we need an entirely different way of thinking about publicly funded software projects. With exception of a few agencies like the ones mentioned above, governments tend not to think about software design as a collaborative, public process. Citizens often have more input into how and where a public park will be built than in how the website they\u2019ll use to find information about the park is built. Yet code sharing and collaboration sites like GitHub could make it possible for everyone to participate in that process, from gathering requirements to writing code to reporting problems.\n\nThis isn\u2019t the way companies like Oracle approach projects. But it\u2019s the way we need to start thinking if we want our government services to actually work.", "article_metadata": {"msapplication-TileImage": "http://www.wired.com/wp-content/themes/Phoenix/assets/images/favicon_ie.png", "Section": "Blog", "description": "It's bad enough that the state of Oregon has paid software giant Oracle over $100 million to build a healthcare exchange site that doesn't work. But it now appears that Oregon is stuck with Oracle, unable to simply hire another firm to finish the job.", "application-name": "WIRED: WIRED", "Author": "Klint Finley", "og": {"site_name": "WIRED", "description": "It's bad enough that the state of Oregon has paid software giant Oracle over $100 million to build a healthcare exchange site that doesn't work. But it now appears that Oregon is stuck with Oracle, unable to simply hire another firm to finish the job.", "title": "What Oracle\u2019s Botched Obamacare Site Says About the Future of the Web", "locale": "en_US", "image": {"width": 660, "identifier": "http://www.wired.com/wp-content/uploads/images_blogs/wiredenterprise/2014/03/government-open-source-ft.jpg", "height": 330}, "url": "http://www.wired.com/2014/03/oracle-oregon/", "type": "article"}, "twitter": {"domain": "WIRED", "description": "It's bad enough that the state of Oregon has paid software giant Oracle over $100 million to build a healthcare exchange site that doesn't work. But it now appears that Oregon is stuck with Oracle, unable to simply hire another firm to finish the job.", "title": "What Oracle\u2019s Botched Obamacare Site Says About the Future of the Web", "image": {"src": "http://www.wired.com/wp-content/uploads/images_blogs/wiredenterprise/2014/03/government-open-source-ft.jpg"}, "creator": "@wired", "site": "@wired", "card": "summary_large_image"}, "msapplication-TileColor": "#cb0004", "msapplication-tooltip": "Read in-depth coverage of current and future trends in technology, and how they are shaping business, entertainment, communications, science, politics, and culture at Wired.com.", "gmapkey": "ABQIAAAAF5yd_X_vTzike6sB6lp3wBQ4h890iMeKvsDZGQOc75SG0lWKAhQW755bw9E_-3ijKe6eqE5sg_NLEw", "apple-itunes-app": "app-id=373903654", "fb": {"page_id": 19440638720}, "Subsection": "WIRED", "DisplayDate": "2014-03-07", "robots": "index, follow", "article": {"section": "Enterprise", "tag": "Tech Law"}, "ExpiryDate": "2060-12-31", "parsely-page": "{\"title\": \"What Oracle\u2019s Botched Obamacare Site Says About the Future of the Web\", \"link\": \"http://www.wired.com/2014/03/oracle-oregon/\", \"image_url\": \"http://www.wired.com/wp-content/uploads/images_blogs/wiredenterprise/2014/03/government-open-source-ft-150x150.jpg\", \"type\": \"post\", \"post_id\": \"148301\", \"pub_date\": \"2014-03-07T06:30:58+00:00\", \"section\": \"WIRED\", \"author\": \"Klint Finley\", \"tags\": [\"Obamacare\",\"opensource\",\"Oracle\",\"Tech Law\"]}", "viewport": "width=device-width, initial-scale=1.0, minimal-ui, shrink-to-fit=no", "news_keywords": "Obamacare, opensource, Oracle, Tech Law"}, "article_summary": "It even went so far as to create its own open source database system inspired by a Google researcher paper.\nNot for constitutional surveillance of U.S. citizens, but for building open source software instead of buying from a company like Oracle.\nThe National Security Agency, meanwhile, built the infrastructure that supports its massive surveillance projects using open source software.\nThe original Healthcare.gov interface \u2014 i.e., the part that actually worked \u2014 was open source.\nBut the problems go beyond procurement: we need an entirely different way of thinking about publicly funded software projects."}